services:
  strapi:
    image: strapi:latest
    env_file: .env
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./package-lock.json:/package-lock.json
      - ./.env:/opt/app/.env
      - ./public/uploads:/opt/app/public/uploads
    command: sh -c "npm install pg --save && npm run develop"
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=proxy
        - traefik.constraint-label=proxy
        # Uses the environment variable DOMAIN
        - traefik.http.routers.strapi.rule=Host(`strapi-admin.${DOMAIN?Variable not set}`)
        - traefik.http.routers.strapi.entrypoints=https
        - traefik.http.routers.strapi.tls=true
        # Use the "le" (Let's Encrypt) resolver created below
        - traefik.http.routers.strapi.tls.certresolver=le
        # Enable HTTP Basic auth, using the middleware created above
        - traefik.http.services.strapi.loadbalancer.server.port=1337
    networks:
      - strapi
      - proxy
    depends_on:
      - strapiDB

  strapiDB:
    env_file: .env
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/mysql
      #- ./data:/var/lib/mysql # if you want to use a bind folder
    ports:
      - "3306:3306"
    networks:
      - strapi

volumes:
  strapi-data:

networks:
  strapi:
    name: strapi
    driver: overlay
  proxy:
    external: true
