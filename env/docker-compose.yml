services:
  strapi:
    image: my-strapi:latest
    env_file: .env
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: strapiDB
      DATABASE_PORT: 5432
      DATABASE_NAME: strapi
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      JWT_SECRET: fb3+kvCRMREcuBm7oiPHSQ==
      ADMIN_JWT_SECRET: fb3+kvCRMREcuBm7oiPHSQ==
      APP_KEYS: ZuIeihVXWggRdQBEtPSxiQ==,Cy3Td4Ns90wCZlqs228UoA==,rz7xfvv1vOM+pD0tSkiJDA==,OnfJMhjL6xT8gpcq9Y0S0w==
      NODE_ENV: develop
    volumes:
      # - ./config:/opt/app/config
      # - ./src:/opt/app/src
      # - ./package.json:/opt/package.json
      # - ./package-lock.json:/opt/package-lock.json
      - ./.env:/opt/app/.env
      - ./public/uploads:/opt/app/public/uploads
    # working_dir: /opt
    command: sh -c "npm i -g npm@latest && npm install pg --save && npm run develop"
    deploy:
      placement:
        constraints:
          - node.labels.strapi.certs-data == true
      labels:
        - traefik.enable=true
        - traefik.docker.network=proxy
        - traefik.constraint-label=proxy
        # Uses the environment variable DOMAIN
        - traefik.http.routers.strapi.rule=Host(`strapi-admin.${DOMAIN?Variable not set}`)
        - traefik.http.routers.strapi.entrypoints=https
        - traefik.http.routers.strapi.tls=true
        # Use the "le" (Let's Encrypt) resolver created below
        - traefik.http.routers.strapi.tls.certresolver=le
        # Enable HTTP Basic auth, using the middleware created above
        - traefik.http.services.strapi.loadbalancer.server.port=1337
    networks:
      - strapi
      - proxy
    depends_on:
      - strapiDB

  strapiDB:
    env_file: .env
    image: sameersbn/postgresql:14-20230628
    volumes:
      - strapi-data:/var/lib/postgresql/data/ #using a volume
    environment:
      - DB_USER=root
      - DB_PASS=root
      - DB_NAME=strapi
    # deploy:
    #   placement:
    #     constraints:
    #       - node.labels.strapi.postgresql-data == true
    ports:
      - "5432:5432"
    networks:
      - strapi

volumes:
  strapi-data:

networks:
  strapi:
    name: strapi
    driver: overlay
    attachable: true
  proxy:
    external: true
